{"version":3,"sources":["redux/types.js","components/ObjectView.js","redux/actions.js","components/ObjectsList.js","components/planet.png","components/Form.js","components/AddObject.js","App.js","reportWebVitals.js","redux/formReducer.js","redux/objectReducer.js","redux/rootReducer.js","index.js"],"names":["CREATE_OBJECT","DELETE_OBJECT","EDIT_OBJECT","NEW_FORM","EDIT_FORM","EMPTY_FORM","view","index","dispatch","useDispatch","useState","hov","setHov","className","useSelector","state","form","ObjectViewHov","hover","objNumber","onClick","type","payload","editForm","onMouseOver","onMouseOut","objName","connect","views","objects","id","Date","now","toString","concat","map","ObjectView","Form","props","isFull","objDate","objPriority","objArea","objApsis","objSlope","objAxes","objAccentricity","objLongtitude","objAnomaly","objDarkness","objSize","objMass","objResistance","trim","length","isValid","parseFloat","noDuplicate","findIndex","obj","submitHandler","event","preventDefault","newObject","createObject","setState","emptyForm","alert","changeInputHandler","persist","prev","target","name","value","editHandler","editObject","deleteObject","prevProps","prevState","this","onSubmit","htmlFor","placeholder","onChange","step","min","src","planet","alt","width","height","style","opacity","marginTop","React","Component","mapDispatchToProps","object","hideMain","ObjectsList","AddObject","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","objectsArr","objectsArr1","splice","store","createStore","app","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3728985.chunk.js","sourcesContent":["export const CREATE_OBJECT = 'CREATE_OBJECT'\nexport const DELETE_OBJECT = 'DELETE_OBJECT'\nexport const EDIT_OBJECT = 'EDIT_OBJECT'\nexport const NEW_FORM = 'NEW_FORM'\nexport const EDIT_FORM = 'EDIT_FORM'\nexport const EMPTY_FORM = 'EMPTY_FORM'\nexport const SELECT_OBJECT = 'SELECT_OBJECT'\nexport const DESELECT_OBJECT = 'DESELECT_OBJECT'\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { editForm } from '../redux/actions'\nimport '../style.css'\n\nexport default ({view, index}) => {\n    const dispatch = useDispatch()\n    const [hov, setHov] = useState(false)\n    let className = (index === useSelector(state => state.form.index)) ? ' ViewSelect' : ''\n    let ObjectViewHov = hov ? ' ObjectViewHov' : ''\n    const hover = () => setHov(!hov)\n    if (view.objNumber) {\n        index = (\"new\" === useSelector(state => state.form.form)) ? index-1 : index\n        return (\n            <div \n            className={\"ObjectView\" + className + ObjectViewHov} \n            onClick={() => dispatch(editForm(index))} \n            onMouseOver={hover}\n            onMouseOut={hover}>\n                {view.objName}\n            </div>\n        )\n    }\n    else {\n        return (\n            <div \n            className={\"ObjectView ViewSelect\" + ObjectViewHov}\n            onMouseOver={hover}\n            onMouseOut={hover}>\n                {view.objName}\n            </div>\n        )\n    }\n}","import { CREATE_OBJECT, EDIT_FORM, EMPTY_FORM, NEW_FORM, SELECT_OBJECT, DESELECT_OBJECT, EDIT_OBJECT, DELETE_OBJECT } from \"./types\";\n\nexport function createObject(object) {\n    return {\n        type: CREATE_OBJECT,\n        payload: object\n    }\n}\n\nexport function editObject(object, index) {\n    return {\n        type: EDIT_OBJECT,\n        payload: {object, index}\n    }\n}\n\nexport function deleteObject(index) {\n    return {\n        type: DELETE_OBJECT,\n        payload: index\n    }\n}\n\nexport function selectObject() {\n    return {\n        type: SELECT_OBJECT\n    }\n}\n\nexport function deselectObject() {\n    return {\n        type: DESELECT_OBJECT\n    }\n}\n\nexport function newForm() {\n    return {\n        type: NEW_FORM\n    }\n}\n\nexport function editForm(index) {\n    return {\n        type: EDIT_FORM,\n        payload: index\n    }\n}\n\nexport function emptyForm() {\n    return {\n        type: EMPTY_FORM\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport ObjectView from './ObjectView.js'\n\n\nconst objectsList = ({views, form}) => {\n    if (form === \"new\") {\n        const newViews = [{objName : \"Новый объект\", id : Date.now().toString()}].concat(views)\n        return newViews.map((view, index) => <ObjectView view={view} index={index} key={view.id}/>)\n    }\n    else {\n        return views.map((view, index) => <ObjectView view={view} index={index} key={view.id}/>)\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        views: state.objects.objects,\n        form: state.form.form\n    }\n}\n\nexport default connect(mapStateToProps,null)(objectsList)","export default __webpack_public_path__ + \"static/media/planet.3f6fb274.png\";","import React from 'react'\nimport { connect } from 'react-redux'\nimport {createObject, emptyForm, editObject, deleteObject} from '../redux/actions'\nimport planet from './planet.png'\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            objName: '',\n            objDate: '',\n            objPriority: '',\n            objArea: '',\n            objNumber: '',\n            objSlope: '',\n            objApsis: '',\n            objAxes: '',\n            objAccentricity: '',\n            objLongtitude: '',\n            objAnomaly: '',\n            objDarkness: '',\n            objSize: '',\n            objMass: '',\n            objResistance: ''\n        }\n        this.form = \"empty\"\n    }\n\n    isFull = ({objName, objDate, objPriority, objArea, objNumber, objSlope, objApsis, objAxes, objAccentricity,\n        objLongtitude, objAnomaly, objDarkness, objSize, objMass, objResistance}) => (\n            objName.trim().length && objDate.trim().length && objPriority.trim().length &&\n            objArea.trim().length && objNumber.trim().length && objApsis.trim().length && \n            objAxes.trim().length && objAccentricity.trim().length && objLongtitude.trim().length && \n            objAnomaly.trim().length && objDarkness.trim().length && objSize.trim().length && \n            objMass.trim().length && objResistance.trim().length)\n\n    isValid = ({objName, objDate, objPriority, objArea, objNumber, objSlope, objApsis, objAxes, objAccentricity,\n        objLongtitude, objAnomaly, objDarkness, objSize, objMass, objResistance}) => (\n        parseFloat(objSlope) >= 0  && parseFloat(objSlope) <= 180 && parseFloat(objApsis) >= 0 && \n        parseFloat(objApsis) < 360 && parseFloat(objAxes) >= 6480 && parseFloat(objAxes) <= 40000 && \n        parseFloat(objAccentricity) >= 0 && parseFloat(objAccentricity) <= 1 && parseFloat(objLongtitude) >= 0 && \n        parseFloat(objLongtitude) <= 180 && parseFloat(objAnomaly) >= 0 && parseFloat(objAnomaly) <= 180 && \n        parseFloat(objDarkness) >= 0 && parseFloat(objDarkness) <= 1 && parseFloat(objSize) >= 0 &&\n        parseFloat(objMass) > 0 && parseFloat(objResistance) >= 0 && parseFloat(objResistance) <= 2)\n    \n    noDuplicate = objName => ((this.props.objects.findIndex(\n                                obj => obj.objName === objName) === -1) || \n                              (this.props.objects.findIndex(\n                                obj => obj.objName === objName) === this.props.index) ? true : false)\n\n    submitHandler = event => {\n        event.preventDefault()\n\n        const {\n            objName, \n            objDate, \n            objPriority,\n            objArea,\n            objNumber,\n            objSlope,\n            objApsis,\n            objAxes,\n            objAccentricity,\n            objLongtitude,\n            objAnomaly,\n            objDarkness,\n            objSize,\n            objMass,\n            objResistance} = this.state\n        if (this.isFull(this.state) && this.isValid(this.state) && this.noDuplicate(this.state.objName)) {\n            const newObject = {\n                objName,\n                objDate,\n                objPriority,\n                objArea,\n                objNumber,\n                objSlope,\n                objApsis,\n                objAxes,\n                objAccentricity,\n                objLongtitude,\n                objAnomaly,\n                objDarkness,\n                objSize,\n                objMass,\n                objResistance,\n                id: Date.now().toString()\n            }\n            this.props.createObject(newObject)\n            this.setState({ \n                objName: '',\n                objDate: '',\n                objPriority: '',\n                objArea: '',\n                objNumber: '',\n                objSlope: '',\n                objApsis: '',\n                objAxes: '',\n                objAccentricity: '',\n                objLongtitude: '',\n                objAnomaly: '',\n                objDarkness: '',\n                objSize: '',\n                objMass: '',\n                objResistance: ''})\n            this.props.emptyForm()\n        }\n        else if (!this.isFull(this.state)) {\n            alert('Пожалуйста, заполните все поля!')\n        }\n        else if (!this.isValid(this.state)) {\n            alert('Пожалуйста, проверьте корректность введённых данных!')\n        }\n        else if (!this.noDuplicate(this.state.objName)) {\n            alert('Объект с таким именем уже существует!')\n        }\n\n    }\n\n    changeInputHandler = event => {\n        event.persist()\n        this.setState(prev => ({...prev, ...{\n          [event.target.name]: event.target.value\n        }}))\n    }\n    \n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.form !== this.props.form || prevProps.index !== this.props.index) {\n            if (this.props.form === \"edit\") {\n                this.setState(this.props.objects[this.props.index])\n            }\n            else {\n                this.setState({\n                    objName: '',\n                    objDate: '',\n                    objPriority: '',\n                    objArea: '',\n                    objNumber: '',\n                    objSlope: '',\n                    objApsis: '',\n                    objAxes: '',\n                    objAccentricity: '',\n                    objLongtitude: '',\n                    objAnomaly: '',\n                    objDarkness: '',\n                    objSize: '',\n                    objMass: '',\n                    objResistance: ''\n                })\n            }\n            // console.log('this', this.props.form, this.props.objects[this.props.index])\n        }\n    }\n\n    editHandler = (event, index) => {\n        event.preventDefault()\n        // console.log(index)\n\n        const {\n            objName, \n            objDate, \n            objPriority,\n            objArea,\n            objNumber,\n            objSlope,\n            objApsis,\n            objAxes,\n            objAccentricity,\n            objLongtitude,\n            objAnomaly,\n            objDarkness,\n            objSize,\n            objMass,\n            objResistance} = this.state\n\n        if (this.isFull(this.state) && this.isValid(this.state) && this.noDuplicate(this.state.objName)) {\n            const newObject = {\n                objName,\n                objDate,\n                objPriority,\n                objArea,\n                objNumber,\n                objSlope,\n                objApsis,\n                objAxes,\n                objAccentricity,\n                objLongtitude,\n                objAnomaly,\n                objDarkness,\n                objSize,\n                objMass,\n                objResistance,\n                id: Date.now().toString()\n            }\n            this.props.editObject(newObject, index)\n            this.setState({ \n                objName: '',\n                objDate: '',\n                objPriority: '',\n                objArea: '',\n                objNumber: '',\n                objSlope: '',\n                objApsis: '',\n                objAxes: '',\n                objAccentricity: '',\n                objLongtitude: '',\n                objAnomaly: '',\n                objDarkness: '',\n                objSize: '',\n                objMass: '',\n                objResistance: ''})\n            this.props.emptyForm()\n        }\n        else if (!this.isFull(this.state)) {\n            alert('Пожалуйста, заполните все поля!')\n        }\n        else if (!this.isValid(this.state)) {\n            alert('Пожалуйста, проверьте корректность введённых данных!')\n        }\n        else if (!this.noDuplicate(this.state.objName)) {\n            alert('Объект с таким именем уже существует!')\n        }\n    }\n\n    deleteObject = (event, index) => {\n        event.preventDefault()\n        this.props.deleteObject(index)\n        this.setState({ \n            objName: '',\n            objDate: '',\n            objPriority: '',\n            objArea: '',\n            objNumber: '',\n            objSlope: '',\n            objApsis: '',\n            objAxes: '',\n            objAccentricity: '',\n            objLongtitude: '',\n            objAnomaly: '',\n            objDarkness: '',\n            objSize: '',\n            objMass: '',\n            objResistance: ''})\n        this.props.emptyForm()\n    }\n\n    render() {\n        if (this.props.form === \"new\") {\n            return (\n                <div>\n                    <div className=\"FormHeader\">\n                        <h3>Создание регулярной группы целевых объектов</h3>\n                        {/* <button className=\"DelBtn\">УДАЛИТЬ</button> */}\n                    </div>\n                    <form onSubmit={this.submitHandler}>\n                        <div className=\"ParamsGroupTop\">\n                            <div>\n                                <label htmlFor=\"name\" className=\"NameLabel\">ЗАДАЙТЕ НАЗВАНИЕ ОБЪЕКТА</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"name\" \n                                    name=\"objName\"\n                                    value={this.state.objName} \n                                    placeholder=\"Название объекта\"\n                                    onChange={this.changeInputHandler} \n                                    className=\"NameInp\"/>\n                            </div>\n                        </div>\n                        <div className=\"ParamsGroupMidOne\">\n                            <div>\n                                <label htmlFor=\"date\" className=\"NameLabel\">ДАТА И ВРЕМЯ ОТСЧЕТА</label>\n                                <input \n                                    type=\"datetime-local\" \n                                    step=\".000001\" \n                                    id=\"date\" \n                                    name=\"objDate\"\n                                    value={this.state.objDate}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"25/05/2020 10:10:55.282000\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"priority\" className=\"NameLabel\">ПРИОРИТЕТ ПОИСКА (ОТ 1)</label>\n                                <input \n                                    type=\"number\" \n                                    id=\"priority\" \n                                    name=\"objPriority\"\n                                    value={this.state.objPriority}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"1\" \n                                    min=\"1\"/>\n                            </div>\n                            <div>\n                            </div>\n                            <div>\n                                <label htmlFor=\"area\" className=\"NameLabel\">КОЛИЧЕСТВО ПЛОСКОСТЕЙ</label>\n                                <input \n                                    type=\"number\" \n                                    id=\"area\" \n                                    name=\"objArea\"\n                                    value={this.state.objArea}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"5\" \n                                    min=\"0\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"object\" className=\"NameLabel\">КОЛИЧЕСТВО ОБЪЕКТОВ НА ПЛОСКОСТИ</label>\n                                <input \n                                    type=\"number\" \n                                    id=\"object\" \n                                    name=\"objNumber\" \n                                    value={this.state.objNumber}\n                                    onChange={this.changeInputHandler}\n                                    placeholder=\"4\"\n                                    min=\"0\"/>\n                            </div>\n                            <div>\n                            </div>\n                        </div>\n                        <div className=\"ParamsGroupMidTwo\">\n                            <div>\n                                <label htmlFor=\"slope\" className=\"NameLabel\">НАКЛОНЕНИЕ ОРБИТЫ</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"slope\" \n                                    name=\"objSlope\"\n                                    value={this.state.objSlope}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0 до 180°\"/>\n                                <p className=\"restrict\">Введите значение от 0 до 180°</p>\n                            </div>\n                            <div>\n                                <label htmlFor=\"apsis\" className=\"NameLabel\">АРГУМЕНТ ПЕРИЦЕНТРА</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"apsis\"\n                                    name=\"objApsis\" \n                                    value={this.state.objApsis}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0 до 360°\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"axes\" className=\"NameLabel\">БОЛЬШАЯ ПОЛУОСЬ</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"axes\" \n                                    name=\"objAxes\"\n                                    value={this.state.objAxes}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 6480 до 40000 км\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"eccentricity\" className=\"NameLabel\">ЭКСЦЕНТРИСИТЕТ</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"eccentricity\" \n                                    name=\"objAccentricity\"\n                                    value={this.state.objAccentricity}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0,0 до 1,0\"/>\n                                <p className=\"restrict\">Введите значение от 0,0 до 1,0</p>\n                            </div>\n                            <div>\n                                <label htmlFor=\"longitude\" className=\"NameLabel\">ДОЛГОТА ВОСХОДЯЩЕГО УЗЛА</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"longitude\" \n                                    name=\"objLongtitude\"\n                                    value={this.state.objLongtitude}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0 до 180° первого объекта\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"anomaly\" className=\"NameLabel\">ИСТИННАЯ АНОМАЛИЯ</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"anomaly\" \n                                    name=\"objAnomaly\"\n                                    value={this.state.objAnomaly}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0 до 180° первого объекта\"/>\n                            </div>\n                        </div>\n                        <div className=\"ParamsGroupBot\">\n                            <div>\n                                <label htmlFor=\"darkness\" className=\"NameLabel\">СТЕПЕНЬ ЧЕРНОТЫ</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"darkness\" \n                                    name=\"objDarkness\"\n                                    value={this.state.objDarkness}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0,0 до 1,0\"/>\n                                <p className=\"restrict\">Введите значение от 0,0 до 1,0</p>\n                            </div>\n                            <div>\n                                <label htmlFor=\"size\" className=\"NameLabel\">ЛИНЕЙНЫЙ РАЗМЕР</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"size\" \n                                    name=\"objSize\"\n                                    value={this.state.objSize}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0,0 метра\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"mass\" className=\"NameLabel\">МАССА</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"mass\" \n                                    name=\"objMass\"\n                                    value={this.state.objMass}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0,0 килограмма\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"resistance\" className=\"NameLabel\">КОЭФФИЦИЕНТ ЛОБОВОГО СОПРОТИВЛЕНИЯ</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"resistance\" \n                                    name=\"objResistance\"\n                                    value={this.state.objResistance}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0,0 до 2,0\"/>\n                                <p className=\"restrict\">Введите значение от 0,0 до 2,0</p>\n                            </div>\n                        </div>\n                        <button type=\"submit\" className=\"CreateBtn\">\n                            СОЗДАТЬ ГРУППУ ОБЪЕКТОВ\n                        </button>\n                    </form>\n                </div>\n            )\n        }\n        else if (this.props.form === \"edit\") {\n            // this.editForm()\n            // console.log(this.props.form, this.props.index, this.state.objName, this.props.objects[this.props.index])\n            return (\n                <div>\n                    <div className=\"FormHeader\">\n                        <h3>Создание регулярной группы целевых объектов</h3>\n                        <button className=\"DelBtn\" onClick={event => this.deleteObject(event, this.props.index)}>УДАЛИТЬ</button>\n                    </div>\n                    <form onSubmit={event => this.editHandler(event, this.props.index)}>\n                        <div className=\"ParamsGroupTop\">\n                            <div>\n                                <label htmlFor=\"name\" className=\"NameLabel\">ЗАДАЙТЕ НАЗВАНИЕ ОБЪЕКТА</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"name\" \n                                    name=\"objName\"\n                                    value={this.state.objName} \n                                    placeholder=\"Название объекта\"\n                                    onChange={this.changeInputHandler} \n                                    className=\"NameInp\"/>\n                            </div>\n                        </div>\n                        <div className=\"ParamsGroupMidOne\">\n                            <div>\n                                <label htmlFor=\"date\" className=\"NameLabel\">ДАТА И ВРЕМЯ ОТСЧЕТА</label>\n                                <input \n                                    type=\"datetime-local\" \n                                    step=\".000001\" \n                                    id=\"date\" \n                                    name=\"objDate\"\n                                    value={this.state.objDate}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"25/05/2020 10:10:55.282000\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"priority\" className=\"NameLabel\">ПРИОРИТЕТ ПОИСКА (ОТ 1)</label>\n                                <input \n                                    type=\"number\" \n                                    id=\"priority\" \n                                    name=\"objPriority\"\n                                    value={this.state.objPriority}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"1\" \n                                    min=\"1\"/>\n                            </div>\n                            <div>\n                            </div>\n                            <div>\n                                <label htmlFor=\"area\" className=\"NameLabel\">КОЛИЧЕСТВО ПЛОСКОСТЕЙ</label>\n                                <input \n                                    type=\"number\" \n                                    id=\"area\" \n                                    name=\"objArea\"\n                                    value={this.state.objArea}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"5\" \n                                    min=\"0\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"object\" className=\"NameLabel\">КОЛИЧЕСТВО ОБЪЕКТОВ НА ПЛОСКОСТИ</label>\n                                <input \n                                    type=\"number\" \n                                    id=\"object\" \n                                    name=\"objNumber\" \n                                    value={this.state.objNumber}\n                                    onChange={this.changeInputHandler}\n                                    placeholder=\"4\"\n                                    min=\"0\"/>\n                            </div>\n                            <div>\n                            </div>\n                        </div>\n                        <div className=\"ParamsGroupMidTwo\">\n                            <div>\n                                <label htmlFor=\"slope\" className=\"NameLabel\">НАКЛОНЕНИЕ ОРБИТЫ</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"slope\" \n                                    name=\"objSlope\"\n                                    value={this.state.objSlope}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0 до 180°\"/>\n                                <p className=\"restrict\">Введите значение от 0 до 180°</p>\n                            </div>\n                            <div>\n                                <label htmlFor=\"apsis\" className=\"NameLabel\">АРГУМЕНТ ПЕРИЦЕНТРА</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"apsis\"\n                                    name=\"objApsis\" \n                                    value={this.state.objApsis}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0 до 360°\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"axes\" className=\"NameLabel\">БОЛЬШАЯ ПОЛУОСЬ</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"axes\" \n                                    name=\"objAxes\"\n                                    value={this.state.objAxes}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 6480 до 40000 км\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"eccentricity\" className=\"NameLabel\">ЭКСЦЕНТРИСИТЕТ</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"eccentricity\" \n                                    name=\"objAccentricity\"\n                                    value={this.state.objAccentricity}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0,0 до 1,0\"/>\n                                <p className=\"restrict\">Введите значение от 0,0 до 1,0</p>\n                            </div>\n                            <div>\n                                <label htmlFor=\"longitude\" className=\"NameLabel\">ДОЛГОТА ВОСХОДЯЩЕГО УЗЛА</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"longitude\" \n                                    name=\"objLongtitude\"\n                                    value={this.state.objLongtitude}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0 до 180° первого объекта\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"anomaly\" className=\"NameLabel\">ИСТИННАЯ АНОМАЛИЯ</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"anomaly\" \n                                    name=\"objAnomaly\"\n                                    value={this.state.objAnomaly}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0 до 180° первого объекта\"/>\n                            </div>\n                        </div>\n                        <div className=\"ParamsGroupBot\">\n                            <div>\n                                <label htmlFor=\"darkness\" className=\"NameLabel\">СТЕПЕНЬ ЧЕРНОТЫ</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"darkness\" \n                                    name=\"objDarkness\"\n                                    value={this.state.objDarkness}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0,0 до 1,0\"/>\n                                <p className=\"restrict\">Введите значение от 0,0 до 1,0</p>\n                            </div>\n                            <div>\n                                <label htmlFor=\"size\" className=\"NameLabel\">ЛИНЕЙНЫЙ РАЗМЕР</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"size\" \n                                    name=\"objSize\"\n                                    value={this.state.objSize}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0,0 метра\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"mass\" className=\"NameLabel\">МАССА</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"mass\" \n                                    name=\"objMass\"\n                                    value={this.state.objMass}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0,0 килограмма\"/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"resistance\" className=\"NameLabel\">КОЭФФИЦИЕНТ ЛОБОВОГО СОПРОТИВЛЕНИЯ</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"resistance\" \n                                    name=\"objResistance\"\n                                    value={this.state.objResistance}\n                                    onChange={this.changeInputHandler} \n                                    placeholder=\"От 0,0 до 2,0\"/>\n                                <p className=\"restrict\">Введите значение от 0,0 до 2,0</p>\n                            </div>\n                        </div>\n                        <button type=\"submit\" className=\"CreateBtn\">\n                            ИЗМЕНИТЬ ГРУППУ ОБЪЕКТОВ\n                        </button>\n                    </form>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"PlanetOut\">\n                    <div className=\"PlanetIn\">\n                        <img src={planet} alt=\"\" width=\"144px\" height=\"144px\" style={{opacity:0.5}} />\n                        <p style={{opacity:0.5, marginTop:\"20px\"}}>Создайте новый объект или отредактируйте существующий</p>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        objects: state.objects.objects,\n        form: state.form.form,\n        index: state.form.index\n    }\n}\n\nconst mapDispatchToProps = {\n    createObject,\n    emptyForm,\n    editObject,\n    deleteObject\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form)","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { newForm } from '../redux/actions'\nimport '../style.css'\n\n\nexport default () => {\nconst dispatch = useDispatch()\n\n    return (\n        <div className=\"BtnContainter\">\n            <button className=\"Btn\" onClick={() => dispatch(newForm())}>ДОБАВИТЬ ОБЪЕКТЫ</button>\n        </div>\n    )\n}","import ObjectsList from './components/ObjectsList'\nimport Form from './components/Form'\nimport './style.css'\nimport AddObject from './components/AddObject';\nimport { connect } from 'react-redux';\n\n\nfunction App({form}) {\n  const hideMain = (form === \"empty\") ? ' hideMain' : ''\n  return (\n    <div className=\"App\">\n      <div className=\"List\">\n        <ObjectsList />\n        <AddObject />\n      </div>\n      <div className={\"Main\" + hideMain}>\n        <Form />\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n      form: state.form.form\n  }\n}\n\nexport default connect(mapStateToProps,null)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { EDIT_FORM, EMPTY_FORM, NEW_FORM } from \"./types\"\n\nconst initialState = {\n    form: \"empty\",\n    index: -1\n}\n\nexport const formReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case NEW_FORM:\n            return {...state, form : \"new\", index: -1}\n        case EDIT_FORM:\n            return {...state, form: \"edit\", index: action.payload}\n        case EMPTY_FORM:\n            return {...state, form: \"empty\", index: -1}\n        default:\n            return state\n    }\n}","import {CREATE_OBJECT, DELETE_OBJECT, EDIT_OBJECT} from './types'\n\nconst initialState = {\n    objects: []\n}\n\nexport const objectReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_OBJECT:\n            return {...state, objects:[action.payload, ...state.objects]}\n        case EDIT_OBJECT:\n            let objectsArr = [...state.objects]\n            objectsArr[action.payload.index] = action.payload.object\n            return {...state, objects: [...objectsArr]}\n        case DELETE_OBJECT:\n            let objectsArr1 = [...state.objects]\n            objectsArr1.splice(action.payload, 1)\n            return {...state, objects: [...objectsArr1]}\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux'\nimport { formReducer } from './formReducer'\nimport { objectReducer } from './objectReducer'\n\nexport const rootReducer = combineReducers({\n    objects: objectReducer,\n    form: formReducer,\n})","import React from 'react';\nimport {render} from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux'\nimport { rootReducer } from './redux/rootReducer';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer)\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nrender(\n  app,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}